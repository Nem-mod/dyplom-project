services:
  timescaledb:
    image: timescale/timescaledb-ha:pg17
    container_name: timescaledb
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
      POSTGRES_DB: my_timescale_db
    ports:
      - '5433:5432' # Expose on a different port to avoid conflicts
    volumes:
      - timescale_data:/var/lib/postgresql/data
    networks:
      - database_network

  postgresql:
    image: postgres:17
    container_name: postgresql
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
      POSTGRES_DB: my_postgres_db
    ports:
      - '5434:5432' # Different port for PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - database_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d my_postgres_db']
      interval: 5s
      timeout: 2s
      retries: 20

  # nestjs:
  #   build:
  #     context: ./web-server
  #   container_name: web-server
  #   restart: always
  #   ports:
  #     - "3000:3000"  # Expose port 3001 for NestJS
  #   environment:
  #     - NODE_ENV=production
  #     - DATABASE_URL=postgresql://admin:adminpassword@postgresql:5432/my_postgres_db?schema=public
  #   volumes:
  #     - ./web-server:/usr/src/app  # Mount the code folder
  #   command: yarn start:dev  # Use dev mode
  #   networks:
  #     - database_network
  #   depends_on:
  #     - postgresql
  #     - timescaledb

  fastapi:
    build:
      context: ./fastapi-server
    container_name: fastapi
    volumes:
      - ./fastapi-server/reports:/app/reports
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://admin:adminpassword@postgresql:5432/my_postgres_db
    networks:
      - database_network
    depends_on:
      postgresql:
        condition: service_healthy
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - '5050:80'
    depends_on:
      - timescaledb
      - postgresql
    networks:
      - database_network

volumes:
  timescale_data:
  postgres_data:

networks:
  database_network:
    driver: bridge
